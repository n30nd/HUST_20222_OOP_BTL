/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controller.Xuatnhapcategoryquestion;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import model.Category;
import model.Question;


/**
 *
 * @author Vu Quang Nam
 */
public class GUI6_3ab extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public GUI6_3ab() {
        initComponents();
        loadCategories();
        //showPanelQuestions();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        panelQuestions = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        selectQsButton = new javax.swing.JButton();

        jLabel5.setText("jLabel5");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/img/alert_signFirst.png"))); // NOI18N

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/img/Txt.32.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox4)
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jCheckBox4)
            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Add from the question bank at the end");

        javax.swing.GroupLayout panelQuestionsLayout = new javax.swing.GroupLayout(panelQuestions);
        panelQuestions.setLayout(panelQuestionsLayout);
        panelQuestionsLayout.setHorizontalGroup(
            panelQuestionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 812, Short.MAX_VALUE)
        );
        panelQuestionsLayout.setVerticalGroup(
            panelQuestionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );

        jLabel4.setText("Search options");

        jCheckBox1.setText("Also show questions from subcategories");

        jCheckBox2.setText("Also show old questions");

        jLabel2.setText("Select a Category: ");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/img/blue_triangle.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addGap(116, 116, 116))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2))
        );

        selectQsButton.setText("ADD SELECTED QUESTION TO THE QUIZ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelQuestions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(selectQsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectQsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        showQuestion(jComboBox1.getSelectedIndex());
    }//GEN-LAST:event_jComboBox1ActionPerformed

    List<Category> categories;
    
    public List<Category> readCategoriesFromFile(String filePath) {
        categories = new ArrayList<>();

        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            Category category = null;

            while ((line = reader.readLine()) != null) {
                if (line.isEmpty()) {
                    // Nếu dòng trống, tiếp tục đọc dòng tiếp theo
                    continue;
                }

                if (category == null) {
                    // Nếu chưa có đối tượng Category hiện tại, tạo mới
                    category = new Category();
                    category.setParent(line);
                } else if (category.getName().isEmpty()) {
                    // Nếu chưa có giá trị cho trường name, gán giá trị đọc được từ file
                    category.setName(line);
                } else if (category.getInfo().isEmpty()) {
                    // Nếu chưa có giá trị cho trường info, gán giá trị đọc được từ file
                    category.setInfo(line);
                } else {
                    // Nếu đã đọc đủ thông tin cho đối tượng Category hiện tại,
                    // gán giá trị cho trường numOfQuestions và thêm vào danh sách
                    category.setId(Integer.parseInt(line));
                    categories.add(category);

                    // Đặt category về null để chuẩn bị cho đối tượng Category tiếp theo
                    category = null;
                }
            }
        } catch (IOException e) {}

        return categories;
    }
    private void loadCategories(){
        // List<Category> categories = readCategoriesFromFile("src\\Data\\categorySource.txt");
        Xuatnhapcategoryquestion xn = new Xuatnhapcategoryquestion();
       
        categories = xn.readCategoryList();
        for(int i = 0; i < categories.size(); i++){
            // xn.fetchQuestion(category.getId(), System.getProperty("user.dir") + "\\src\\Data\\newQuestion.txt");
            categories.get(i).setNumOfQuestions(xn.readQuestionList(categories.get(i).getId()).size());// tính số câu hỏi trong mỗi category
            jComboBox1.addItem(categories.get(i).toString1());
        }
    }

        
//private void showPanelQuestions(){
//    panelQuestions.setLayout(new BoxLayout(panelQuestions,BoxLayout.Y_AXIS));
//    
//    
//}

    private void showQuestion(int i) {

        panelQuestions.removeAll();
        
        Xuatnhapcategoryquestion xn = new Xuatnhapcategoryquestion();
        
        List<Question> questionChooses = xn.readQuestionList(categories.get(i).getId());
        panelQuestions.setLayout(new BoxLayout(panelQuestions, BoxLayout.Y_AXIS));

        for (Question qs : questionChooses) {
          //  panelQuestions.add(new JLabel(qs.getName()));
          // jLabel5.setText(qs.getName());
           //panelQuestions.add(jPanel2);
           JLabel label1 = new JLabel("Label 1");
    JCheckBox checkBox = new JCheckBox("Checkbox");
    JLabel label2 = new JLabel(qs.getName());
    JLabel label3 = new JLabel("Label 3");
    
    Box questionBox = Box.createHorizontalBox();
    
    // Vị trí và kích thước cố định cho label1
    Dimension label1Size = new Dimension(40, 25); // Kích thước cố định cho label1
    label1.setMinimumSize(label1Size);
    label1.setMaximumSize(label1Size);
    label1.setPreferredSize(label1Size);
    
    // Vị trí và kích thước cố định cho checkBox
    Dimension checkBoxSize = new Dimension(80, 25); // Kích thước cố định cho checkBox
    checkBox.setMinimumSize(checkBoxSize);
    checkBox.setMaximumSize(checkBoxSize);
    checkBox.setPreferredSize(checkBoxSize);
    
    // Vị trí và kích thước cố định cho label2
    Dimension label2Size = new Dimension(300, 25); // Kích thước cố định cho label2
    label2.setMinimumSize(label2Size);
    label2.setMaximumSize(label2Size);
    label2.setPreferredSize(label2Size);
    
    // Vị trí và kích thước cố định cho label3
    Dimension label3Size = new Dimension(100, 25); // Kích thước cố định cho label3
    label3.setMinimumSize(label3Size);
    label3.setMaximumSize(label3Size);
    label3.setPreferredSize(label3Size);
    
    questionBox.add(label1);
    questionBox.add(Box.createHorizontalStrut(1)); // Khoảng cách ngang giữa label1 và checkBox
    questionBox.add(checkBox);
    questionBox.add(Box.createHorizontalStrut(2)); // Khoảng cách ngang giữa checkBox và label2
    questionBox.add(label2);
    questionBox.add(Box.createHorizontalGlue()); // Khoảng cách ngang giữa label2 và label3
    questionBox.add(label3);
    
    panelQuestions.add(questionBox);

        }
        panelQuestions.validate();
        panelQuestions.repaint();
        // Thực hiện hành động sau khi người dùng chọn phần tử
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel panelQuestions;
    private javax.swing.JButton selectQsButton;
    // End of variables declaration//GEN-END:variables

    public void setLocationRelativeTo(Object object) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
